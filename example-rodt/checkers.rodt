0;

type = "Rhyscitlema_Objects_Definition_Text" ;

message = "
           left-click on a graph

      or  right-click on a camera


 click, maintain and move the mouse to turn

 press ctrl, maintain and move the mouse to shift


 http://www.rhyscitlema.com/applications/graph-plotter-3d

";


\mfet{0;
 type =  "Camera" ;
 name =  "Player 1 - Checkers" ;
 file = "|file.mfet";

 origin =  movement + {0, 0, 600} ;

 axes =  file.Turn((1,0,0), (0,-1,0), (0,1,0), turnAngle);

 rectangle = (100, 100, 250, 250, 0, 0) := current + CameraResize ;

 zoom =  2 := file.zoomCamera(current);

 private movement  = ((0,0,0) := file.moveCamera(current));
 private turnAngle = ((0,0,0) := file.turnCamera(current));
}

\mfet{0;
 type =  "Camera" ;
 name =  "Player 2 - Checkers" ;
 file = "|file.mfet";

 origin =  movement + {0, 0, 600} ;

 axes = file.Turn((-1,0,0), (0,1,0), (0,1,0),-turnAngle);

 rectangle = (500, 100, 250, 250, 0, 0) := current + CameraResize ;

 zoom =  2 := file.zoomCamera(current);

 private movement  = ((0,0,0) := file.moveCamera(current));
 private turnAngle = ((0,0,0) := file.turnCamera(current));
}


\mfet{0;
 type =  "Surface" ;
 name =  "Board" ;
 file = "|file.mfet";

 origin =  movement;

 axes   = turn(0,0,0);

 enclosed turn(angle) = file.Turn(-(1,0,0), (0,1,0),
                          (0,1,0), turnAngle+angle);
 enclosed bdr = 30;
 enclosed squares = 8; # number of grid squares per line

 function(x,y,z) = 0 ;

 private f(t) = floor(squares*(t+bdr)/(2bdr)) mod 2;
 colour(x,y,z) = f(x)==f(y) ? (1,0,0,1) : (1,1,1,1);

 boundary  =  {-bdr, bdr, -bdr, bdr, 0, 0} ;
 accuracy  =  1 ;

 private movement  = ((0,0,0) := file.moveObject(current));
 private turnAngle = ((0,0,0) := file.turnObject(current));
}

\mfet{0;
 type =  "Board" ;
 name =  "P100" ;

 origin =  position((0,0,0),movement);
 axes   =  turn(turnAngle);

 private movement  = ((0,0,0) := moveObject(current));
 private turnAngle = ((0,0,0) := turnObject(current));

 function(x,y,z) =  0 ;
 accuracy        =  10 ;
 boundary        =  {-bdr, bdr, -bdr, bdr, -1, 1} ;

 bdr = "Board".bdr/squares;

 colour(x,y,z) = (x^2+y^2 >  bdr^2) ? {0,0,0,0} :
                 (x^2+y^2 <= bdr^2/1.5) ? {0,1,0,1} : {0,0,1,1};

 position(xyz, movement) = place(xyz, movement, +1);

 place((x,y,z), movement, B) = "Board".origin +
                               "Board".axes^T *
                           (B*((1-(2x+1)/squares) * "Board".bdr,
                               (1-(2y+1)/squares) * "Board".bdr, 0)
                             +( (1,1,0) .* movement ) ) ;

 turnObject(current) = current + Key_Ctrl * (MouseMotion * PixelSize .* (10, -10, 10)) ;

 moveObject(current) = current + Mouse_Left * ("Board".axes * CameraAxes^T * (MouseMotion .* (D, D, 0))) ;

 private D = CameraDistance * PixelSize ;
}

\mfet{0;
 type =  "P100" ;
 name =  "P200" ;

 origin =  position((0,0,0), movement);
 axes   =  turn(turnAngle);

 private movement  = ((0,0,0) := moveObject(current));
 private turnAngle = ((0,0,0) := turnObject(current));

 colour(x,y,z) = (x^2+y^2 >  bdr^2) ? {0,0,0,0} :
                 (x^2+y^2 <= bdr^2/1.5) ? {0,0,1,1} : {0,1,0,1};

 position(xyz, movement) = place(xyz, movement, -1);
}


\mfet{0;
 type =  "P100" ;
 name =  "P120" ;

 origin = position((2,0,0),movement) ;
 axes   = turn(turnAngle) ;

 private movement  = ((0,0,0) := moveObject(current));
 private turnAngle = ((0,0,0) := turnObject(current));
}

\mfet{0;
 type =  "P100" ;
 name =  "P140" ;

 origin = position((4,0,0),movement) ;
 axes   = turn(turnAngle) ;

 private movement  = ((0,0,0) := moveObject(current));
 private turnAngle = ((0,0,0) := turnObject(current));
}

\mfet{0;
 type =  "P100" ;
 name =  "P160" ;

 origin = position((6,0,0),movement) ;
 axes   = turn(turnAngle) ;

 private movement  = ((0,0,0) := moveObject(current));
 private turnAngle = ((0,0,0) := turnObject(current));
}

\mfet{0;
 type =  "P100" ;
 name =  "P111" ;

 origin = position((1,1,0),movement) ;
 axes   = turn(turnAngle) ;

 private movement  = ((0,0,0) := moveObject(current));
 private turnAngle = ((0,0,0) := turnObject(current));
}

\mfet{0;
 type =  "P100" ;
 name =  "P131" ;

 origin = position((3,1,0),movement) ;
 axes   = turn(turnAngle) ;

 private movement  = ((0,0,0) := moveObject(current));
 private turnAngle = ((0,0,0) := turnObject(current));
}

\mfet{0;
 type =  "P100" ;
 name =  "P151" ;

 origin = position((5,1,0),movement) ;
 axes   = turn(turnAngle) ;

 private movement  = ((0,0,0) := moveObject(current));
 private turnAngle = ((0,0,0) := turnObject(current));
}

\mfet{0;
 type =  "P100" ;
 name =  "P171" ;

 origin = position((7,1,0),movement) ;
 axes   = turn(turnAngle) ;

 private movement  = ((0,0,0) := moveObject(current));
 private turnAngle = ((0,0,0) := turnObject(current));
}

\mfet{0;
 type =  "P100" ;
 name =  "P102" ;

 origin = position((0,2,0),movement) ;
 axes   = turn(turnAngle) ;

 private movement  = ((0,0,0) := moveObject(current));
 private turnAngle = ((0,0,0) := turnObject(current));
}

\mfet{0;
 type =  "P100" ;
 name =  "P122" ;

 origin = position((2,2,0),movement) ;
 axes   = turn(turnAngle) ;

 private movement  = ((0,0,0) := moveObject(current));
 private turnAngle = ((0,0,0) := turnObject(current));
}

\mfet{0;
 type =  "P100" ;
 name =  "P142" ;

 origin = position((4,2,0),movement) ;
 axes   = turn(turnAngle) ;

 private movement  = ((0,0,0) := moveObject(current));
 private turnAngle = ((0,0,0) := turnObject(current));
}

\mfet{0;
 type =  "P100" ;
 name =  "P162" ;

 origin = position((6,2,0),movement) ;
 axes   = turn(turnAngle) ;

 private movement  = ((0,0,0) := moveObject(current));
 private turnAngle = ((0,0,0) := turnObject(current));
}


\mfet{0;
 type =  "P200" ;
 name =  "P220" ;

 origin = position((2,0,0),movement) ;
 axes   = turn(turnAngle) ;

 private movement  = ((0,0,0) := moveObject(current));
 private turnAngle = ((0,0,0) := turnObject(current));
}

\mfet{0;
 type =  "P200" ;
 name =  "P240" ;

 origin = position((4,0,0),movement) ;
 axes   = turn(turnAngle) ;

 private movement  = ((0,0,0) := moveObject(current));
 private turnAngle = ((0,0,0) := turnObject(current));
}

\mfet{0;
 type =  "P200" ;
 name =  "P260" ;

 origin = position((6,0,0),movement) ;
 axes   = turn(turnAngle) ;

 private movement  = ((0,0,0) := moveObject(current));
 private turnAngle = ((0,0,0) := turnObject(current));
}

\mfet{0;
 type =  "P200" ;
 name =  "P211" ;

 origin = position((1,1,0),movement) ;
 axes   = turn(turnAngle) ;

 private movement  = ((0,0,0) := moveObject(current));
 private turnAngle = ((0,0,0) := turnObject(current));
}

\mfet{0;
 type =  "P200" ;
 name =  "P231" ;

 origin = position((3,1,0),movement) ;
 axes   = turn(turnAngle) ;

 private movement  = ((0,0,0) := moveObject(current));
 private turnAngle = ((0,0,0) := turnObject(current));
}

\mfet{0;
 type =  "P200" ;
 name =  "P251" ;

 origin = position((5,1,0),movement) ;
 axes   = turn(turnAngle) ;

 private movement  = ((0,0,0) := moveObject(current));
 private turnAngle = ((0,0,0) := turnObject(current));
}

\mfet{0;
 type =  "P200" ;
 name =  "P271" ;

 origin = position((7,1,0),movement) ;
 axes   = turn(turnAngle) ;

 private movement  = ((0,0,0) := moveObject(current));
 private turnAngle = ((0,0,0) := turnObject(current));
}

\mfet{0;
 type =  "P200" ;
 name =  "P202" ;

 origin = position((0,2,0),movement) ;
 axes   = turn(turnAngle) ;

 private movement  = ((0,0,0) := moveObject(current));
 private turnAngle = ((0,0,0) := turnObject(current));
}

\mfet{0;
 type =  "P200" ;
 name =  "P222" ;

 origin = position((2,2,0),movement) ;
 axes   = turn(turnAngle) ;

 private movement  = ((0,0,0) := moveObject(current));
 private turnAngle = ((0,0,0) := turnObject(current));
}

\mfet{0;
 type =  "P200" ;
 name =  "P242" ;

 origin = position((4,2,0),movement) ;
 axes   = turn(turnAngle) ;

 private movement  = ((0,0,0) := moveObject(current));
 private turnAngle = ((0,0,0) := turnObject(current));
}

\mfet{0;
 type =  "P200" ;
 name =  "P262" ;

 origin = position((6,2,0),movement) ;
 axes   = turn(turnAngle) ;

 private movement  = ((0,0,0) := moveObject(current));
 private turnAngle = ((0,0,0) := turnObject(current));
}

